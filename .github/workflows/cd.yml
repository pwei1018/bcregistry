name: BCREGISTRY UI CD

on:
  push:
    branches:
      - main
  workflow_dispatch:
    inputs:
      environment:
        description: "Environment (dev/test/prod)"
        required: true
        default: "dev"
      tagname:
        description: "Specify the version (git tag) to deploy"
        required: false
        default: ""

defaults:
  run:
    shell: bash

env:
  APP_NAME: "bcregistry"
  TAG_NAME: "dev"

jobs:
  bcregistry-cd-by-push:
    runs-on: ubuntu-20.04

    if: github.event_name == 'push' && github.repository == 'pwei1018/bcregistry'
    environment:
      name: "dev"

    # Allow add the tag in the repo.
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'write'
      id-token: 'write'

    steps:
      - uses: actions/checkout@v3

      - name: Configure 1Password Connect
        uses: 1password/load-secrets-action/configure@v1
        with:
          OP_CONNECT_HOST: ${{ secrets.OP_CONNECT_URL }}
          OP_CONNECT_TOKEN: ${{ secrets.OP_CONNECT_TOKEN }}

      - name: Load secret
        env:
          APP_ENV: dev-new
        run: |
          op inject -i ./devops/vaults.env -o .env -f

      - name: Set git tag format - datetime.short-sha
        id: customtag
        run: echo "tag=`date +'%Y%m%d%H%M'`.`git rev-parse --short ${{ github.sha }}`" >> $GITHUB_OUTPUT

      - name: Add git tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.customtag.outputs.tag }}
          tag_prefix: ${{ env.TAG_NAME }}.

  bcregistry-cd-by-dispatch:
    runs-on: ubuntu-20.04

    if: github.event_name == 'workflow_dispatch' && github.repository == 'pwei1018/bcregistry'
    environment:
      name: "${{ github.event.inputs.environment }}"

    # Allow add the tag in the repo.
    # Add "id-token" with the intended permissions.
    permissions:
      contents: 'write'
      id-token: 'write'

    steps:
      - name: Set env by input
        run: |
          echo "TAG_NAME=${{ github.event.inputs.environment }}" >> $GITHUB_ENV

      - name: Get git tag preix
        if: github.event.inputs.tagname == null
        id: tagprefix
        run: |
          if [ "${{ env.TAG_NAME }}" = "test" ]
          then
            echo "TAG_PREFIX=dev" >> $GITHUB_OUTPUT
          elif [ "${{ env.TAG_NAME }}" = "prod" ]
          then
            echo "TAG_PREFIX=test" >> $GITHUB_OUTPUT
          else
            echo "TAG_PREFIX=dev" >> $GITHUB_OUTPUT
          fi

      - name: Get lastest git tag by tag preix
        uses: oprypin/find-latest-tag@v1
        if: github.event.inputs.tagname == null
        id: latesttag
        with:
          repository: pwei1018/bcregistry
          releases-only: false
          prefix: ${{ steps.tagprefix.outputs.TAG_PREFIX}}

      - name: Checout out the code by the git tag
        if: github.event.inputs.tagname == null
        uses: actions/checkout@v3
        with:
          ref: ${{ steps.latesttag.outputs.tag  }}

      - name: Checout out the code by the input git tag
        if: github.event.inputs.tagname != null
        uses: actions/checkout@v3
        with:
          ref: ${{ github.event.inputs.tagname }}

      - run: |
          pwd
          ls -l
          echo "`git log -1 --format='%h'`"

      - name: Set git tag format - datetime.short-sha
        id: customtag
        run: echo "tag=`date +'%Y%m%d%H%M'`.`git log -1 --format='%h'`" >> $GITHUB_OUTPUT

      - name: Add git tag
        uses: mathieudutour/github-tag-action@v6.1
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          custom_tag: ${{ steps.customtag.outputs.tag }}
          tag_prefix: ${{ env.TAG_NAME }}.